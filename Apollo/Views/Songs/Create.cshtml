@model Apollo.Models.Song

@{
    ViewData["Title"] = "Create";
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <link href="~/Styles/create.css" rel="stylesheet" />
</head>

<div class="title justify-content-center">
    <h1>Add New Song</h1>
</div>

<hr />

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="songs-create">Important!</h5>
            </div>
            <div class="modal-body">
                <span id="songs-create">
                    Make sure categories and artists exist before adding songs!
                </span>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary" onclick="document.location.href = '/Home'">Understood</button>
            </div>
        </div>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="row form-group">
                <div class="col">
                    <label asp-for="Length" class="control-label"></label>
                    <span id="songLengthVal"></span>
                    <input id="songLengthRange" type="range" class="form-range" min="60" max="600" step="1">
                </div>
                <div class="d-none">
                    <input asp-for="Length" class="form-control" />
                    <span asp-validation-for="Length" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Category" class="control-label"></label>
                <select asp-for="Category" class="form-control" asp-items="@ViewBag.categories"></select>
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Artist" class="control-label"></label>
                <select asp-for="Artist" class="form-control" asp-items="@ViewBag.artists"></select>
                <span asp-validation-for="Artist" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Album" class="control-label"></label>
                <select asp-for="Album" class="form-control" asp-items="@ViewBag.albums"></select>
                <span asp-validation-for="Album" class="text-danger"></span>
            </div>
            <div class="saveBtn form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="backToList">
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript">
        var categories = @Html.Raw(Json.Serialize(ViewBag.categories));
        var artists = @Html.Raw(Json.Serialize(ViewBag.artists));
    </script>
    <script src="~/Scripts/songs-create.js"></script>
}
